{{ _gtmManager | raw }}

{{ _metaManager.getMeta('header.first') | raw }}

{{ _seoManager | raw }}

{{ _metaManager.getMeta('header') | raw }}

<!-- libraries css, less and js -->
{{ _assetManager.getMeta(['css', 'less', 'js'], ['libraries']) | raw }}

<script>
    props.locale = '{{ _localeManager.getCurrent() }}';
</script>

<!-- main css, less and js -->
{{ _assetManager.getMeta(['css', 'less', 'js'], ['main']) | raw }}

<!-- external assets-->
{{ _assetManager.getExternals() | raw }}

<!-- vue components -->
{{ _vueManager.getComponents() | raw }}

<!-- vue filters -->
{{ _vueManager.getFilters() | raw }}

<!-- google fonts -->
{{ _assetManager.getGoogleFonts() | raw }}

<!--  vue css, less and js -->
{{ _assetManager.getMeta(['css', 'less', 'js'], ['vue']) | raw }}

<!-- vue live components -->
{{ _vueManager.getViews() | raw }}

<script>
    var Pckg = Pckg || {};
    Pckg.config = {};
    Pckg.config.locale = {
        format: {
            dateMoment: 'LL',
            timeMoment: 'LT'
        },
        currency: 'EUR',
        currencySign: 'â‚¬'
    };

    {% if _env.isDev() %}
    Vue.config.debug = true;
    Vue.config.silent = false;
    Vue.config.devtools = true;
    {% endif %}

    Vue.filter('price', function (price, decimals) {
        return locale.price(price, decimals);
    });

    Vue.filter('roundPrice', function (price, decimals) {
        return locale.roundPrice(price, decimals);
    });

    Vue.filter('date', function (date, format) {
        return locale.date(date, format);
    });

    Vue.filter('datetime', function (date, format) {
        return locale.datetime(date, format);
    });
</script>

{{ _metaManager.getMeta('headerLast') | raw }}

<script type="text/x-template" id="pckg-dispatcher-notifications-template">
    <div class="pckg-dispatcher-notifications-wrapper">
        <div class="alert alert-dismissible alert-fixed" role="alert"
             :class="'alert-' + notification.type"
             v-for="notification in notifications">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span
                        aria-hidden="true" @click="removeNotification(notification)">&times;</span></button>
            <div v-html="notification.content"></div>
        </div>
    </div>
</script>

<script>
    Vue.component('pckg-dispatcher-notifications', {
        name: 'pckg-dispatcher-notifications',
        template: '#pckg-dispatcher-notifications-template',
        mixins: [pckgTimeout, pckgDelimiters],
        data: function () {
            return {
                notifications: []
            };
        },
        methods: {
            removeNotification: function (notification) {
                this.notifications.splice(this.notifications.indexOf(notification), 1);
            }
        },
        created: function () {
            $dispatcher.$on('notification:success', function (msg) {
                var notification = {
                    content: msg,
                    type: 'success'
                };
                this.notifications.push(notification);
                this.timeout('autoclose', function () {
                    this.removeNotification(notification);
                }.bind(this), 2500, notification);
            }.bind(this));
            $dispatcher.$on('notification:error', function (msg) {
                var notification = {
                    content: msg,
                    type: 'danger'
                };
                this.notifications.push(notification);
                this.timeout('autoclose', function () {
                    this.removeNotification(notification);
                }.bind(this), 5000, notification);
            }.bind(this));
        }
    });
</script>