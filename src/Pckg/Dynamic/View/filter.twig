{{ filterForm.open() | raw }}
<div class="row action dynamic-filter">
    <div class="col-sm-3 filter-skipped">
        {% embed 'Pckg/Generic/View/panel.twig' %}

            {% block title %}
            Skipped filters on <i>{{ table.table }}</i>
            {% endblock %}

            {% block content %}
                <p><b>Relations</b></p>
                <div class="form-group" v-for="relationFilter in relationFilters">
                    <label class="col-sm-8">${ relationFilter.table }</label>
                    <div class="col-sm-4">
                        <button class="btn btn-info btn-block" v-on:click.prevent="addRelationFilter(relationFilter)">+</button>
                    </div>
                </div>
                <p><b>Fields</b></p>
                <div class="form-group" v-for="filter in filters">
                    <label class="col-sm-8">${ filter.label }</label>
                    <div class="col-sm-4">
                        <button class="btn btn-info btn-block" v-on:click.prevent="addFilter(filter)">+</button>
                    </div>
                </div>
            {% endblock %}

        {% endembed %}
    </div>
    <div class="col-sm-9 filter-applied">
        {% embed 'Pckg/Generic/View/panel.twig' %}

            {% block title %}
                Applied filters on <i>{{ table.table }}</i>
            {% endblock %}

            {% block content %}
                <p v-if="!applied.length">Add filters from left panel</p>
                <div class="form-group" v-for="filter in applied">
                    <label class="col-sm-3">${ filters[filter.field].label }</label>
                    <div class="col-sm-2">
                        <select v-model="filter.options.method" class="form-control">
                            <option v-for="(key,option) in typeMethods" :value="key">${ option.label }</option>
                        </select>
                    </div>
                    <div class="col-sm-5">
                        <template v-if="filters[filter.field].type == 'select'">
                            <select v-model="filter.value" class="form-control">
                                <option v-for="(key, option) in filters[filter.field].options.options" :value="key">${ option }</option>
                            </select>
                        </template>
                        <template v-else>
                            <input type="text" v-model="filter.value" class="form-control" />
                        </template>
                    </div>
                    <div class="col-sm-2">
                        <button class="btn btn-danger btn-block" v-on:click.prevent="removeFilter(filter)">-</button>
                    </div>
                </div>
                <div class="form-group" v-for="relationFilter in appliedRelations">
                    <label class="col-sm-3">${ relationFilter.relationFilter.table }</label>
                    <div v-if="relationFilter.relationFilter.type == 2" class="col-sm-2">
                        <select v-model="relationFilter.field" class="form-control">
                            <option v-for="option in relationFilter.relationFilter.fields" :value="option.field">${ option.label }</option>
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <select v-model="relationFilter.options.method" class="form-control">
                            <option v-for="(key,option) in relationMethods" :value="key">${ option.label }</option>
                        </select>
                    </div>
                    <div v-if="relationFilter.relationFilter.type == 2" class="col-sm-3">
                        <input type="text" v-model="relationFilter.value" class="form-control" />
                    </div>
                    <div v-if="relationFilter.relationFilter.type != 2" class="col-sm-5">
                        <select v-model="relationFilter.value" class="form-control" v-if="relationFilter.options.method == 'equals' || relationFilter.options.method == 'not'">
                            <option v-for="option in relationFilter.relationFilter.options.options" :value="option.key">${ option.value }</option>
                        </select>
                        <select v-model="relationFilter.value" class="form-control" multiple v-else>
                            <option v-for="option in relationFilter.relationFilter.options.options" :value="option.key" key-by="option.key">${ option.value }</option>
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <button class="btn btn-danger btn-block" v-on:click.prevent="removeRelationFilter(relationFilter)">-</button>
                    </div>
                </div>

                <button class="btn btn-success" v-on:click.prevent="save">Save to session</button>
            {% endblock %}

        {% endembed %}
    </div>
</div>
{{ filterForm.close() | raw }}

<script type="text/javascript">
    var data = data || {};
    data.filters = {{ filters.toJSON() | raw }};
    data.relationFilters = {{ relationFilters.toJSON() | raw }};
    data.appliedFilters = {{ appliedFilters | json_encode | raw }};
    data.appliedRelationFilters = {{ appliedRelationFilters | json_encode | raw }};
    data.relationMethods = {{ relationMethods | json_encode | raw }};
    data.typeMethods = {{ typeMethods | json_encode | raw }};

    var dynamicFilter = new Vue({
        el: '.action.dynamic-filter',
        data: function () {
            return {
                typeMethods: data.typeMethods,
                relationMethods: data.relationMethods,
                filters: data.filters,
                relationFilters: data.relationFilters,
                applied: data.appliedFilters,
                appliedRelations: this.addRelationFilterToAppliedRelations(data.appliedRelationFilters, data.relationFilters)
            };
        },
        methods: {
            addRelationFilterToAppliedRelations: function (applied, filters) {
                $.each(applied, function (i, appliedFilter) {
                    $.each(filters, function (j, filter) {
                        if (filter.id == appliedFilter.id) {
                            appliedFilter.relationFilter = filter;
                            return false;
                        }
                    })
                });
                return applied;
            },
            addFilter: function (filter) {
                this.applied.push({
                    field: filter.field,
                    value: null,
                    options: {
                        method: 'equals'
                    }
                });
            },
            addRelationFilter: function (relationFilter) {
                this.appliedRelations.push({
                    id: relationFilter.id,
                    value: null,
                    options: {
                        method: 'equals'
                    },
                    relationFilter: relationFilter
                });
            },
            removeFilter: function (filter) {
                this.applied.$remove(filter);
            },
            removeRelationFilter: function (relationFilter) {
                this.appliedRelations.$remove(relationFilter);
            },
            save: function () {
                http.post(
                        '{{ saveFilterUrl }}',
                        function () {
                            return {
                                filters: this.applied,
                                relationFilters: this.appliedRelations.map(function (relation) {
                                    return {
                                        id: relation.id,
                                        value: relation.value,
                                        field: relation.field,
                                        options: {
                                            method: relation.options.method
                                        }
                                    };
                                }),
                            };
                        }.bind(this)
                );
            }
        }
    });
</script>