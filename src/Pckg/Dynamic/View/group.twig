{{ groupForm.open() | raw }}
<div class="row action dynamic-group">
    <div class="col-sm-3 sort-skipped">
        {% embed 'Pckg/Generic/View/panel.twig' %}

            {% block title %}
            Skipped groups on <i>{{ table.table }}</i>
            {% endblock %}

            {% block content %}
                <div class="form-group" v-for="group in groups">
                    <label class="col-sm-8">${ group.label }</label>
                    <div class="col-sm-4">
                        <button class="btn btn-info btn-block" v-on:click.prevent="addGroup(group)">+</button>
                    </div>
                </div>
            {% endblock %}

        {% endembed %}
    </div>
    <div class="col-sm-9 sort-applied">
        {% embed 'Pckg/Generic/View/panel.twig' %}

            {% block title %}
                Applied groups on <i>{{ table.table }}</i>
            {% endblock %}

            {% block content %}

                <p v-if="!applied.length">Add groups from left panel</p>
                <div class="form-group" v-for="group in applied">
                    <label class="col-sm-3">${ groups[group.field].label }</label>
                    <div class="col-sm-4">
                        <select v-model="group.options.direction" class="form-control">
                            <option v-for="(key,option) in typeMethods" :value="key">${ option.label }</option>
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <button class="btn btn-danger btn-block" v-on:click.prevent="removeGroup(group)">-</button>
                    </div>
                </div>

                <button class="btn btn-success" v-on:click.prevent="save">Save to session</button>

            {% endblock %}

        {% endembed %}
    </div>
</div>
{{ groupForm.close() | raw }}

<script type="text/javascript">
    var data = data || {};

    data.typeMethods = {{ typeMethods | json_encode | raw }};
    data.groups = {{ groups | json_encode | raw }};
    data.appliedGroups = {{ appliedGroups | json_encode | raw }};

    var dynamicFilter = new Vue({
        el: '.action.dynamic-group',
        data: function () {
            return {
                typeMethods: data.typeMethods,
                groups: data.groups,
                applied: data.appliedGroups,
            };
        },
        methods: {
            addGroup: function (group) {
                this.applied.push({
                    field: group.field,
                    options: {
                        direction: 'ascending'
                    }
                });
            },
            removeGroup: function (group) {
                this.applied.$remove(group);
            },
            buildAppliedGroups: function () {
                return this.applied;
            },
            save: function () {
                http.post('{{ saveGroupUrl }}', function () {
                    return {
                        groups: this.buildAppliedGroups(),
                    };
                }.bind(this), function (json) {
                    console.log('callback', json);
                });
            }
        }
    });
</script>