<div class="pckg-dynamic-record-tabs">
    {% include 'Pckg/Maestro/View/_pckg_maestro_actions.twig' with { recordActions: actions } %}
    <h2>
        {{ formalize.getTitle() | raw }}
        <pckg-maestro-actions :recordactionhandler="recordactionhandler"
                              :record="{{ tabelize.transformRecord(record) | json_encode | escape('html_attr') }}"></pckg-maestro-actions>
    </h2>

    <ul class="nav nav-tabs" role="tablist" id="ajaxTabs">
        <li role="presentation" class="active">
            <a href="#home" aria-controls="home" role="tab" data-toggle="tab">{{ __('pckg.dynamic.tab.home') }}</a>
        </li>
        {% for tab in tabs %}
            <li role="presentation">
                <a href="#dynamic-tab-{{ tab.id }}" aria-controls="dynamic-tab-{{ tab.id }}" role="tab"
                   data-toggle="tab"
                   @click.prevent="loadAjaxTab({{ tab.id }}, '{{ tab.getUrl() }}')">{{ tab.name }}</a>
            </li>
        {% endfor %}
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="home">
            {{ formalize | raw }}

            {% for tabelize in tabelizes.0 %}
                {{ tabelize | raw }}
            {% endfor %}
            {% for functionize in functionizes.0 %}
                {{ functionize | raw }}
            {% endfor %}
        </div>
        {% for tab in tabs %}
            <div role="tabpanel" class="tab-pane" id="dynamic-tab-{{ tab.id }}">
                <i class="fa fa-spinner fa-spin fa-3x fa-fw text-center"></i>
            </div>
        {% endfor %}
    </div>
    to string views
    {{ tabelize.__toStringViews() | raw }}
</div>

<script>
    utils.pushToVue({
        data: {
            loadedTabs: {},
            recordactionhandler: function (record, action) {
                console.log('dispatching2 record:' + action);

                this.$dispatch('record:' + action, record.id, record);
                this.$emit('record:' + action, record.id, record);
                this.$broadcast('record:' + action, record.id, record);
            }
        },
        methods: {
            loadAjaxTab: function (tabId, url) {
                http.get(url + '?html=1', function (html) {
                    var $element = $('#dynamic-tab-' + tabId).html(html);
                    this.$compile($element.get(0));
                }.bind(this));
            }
        }
    });
</script>