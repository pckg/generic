{% import _self as selfMacros %}

{% set table = tabelize.getEntity().getTable() %}

{% set records = tabelize.getRecords() %}
{% set fields = tabelize.getFields() %}
{% set recordActions = tabelize.getRecordActions() %}
{% set entityActions = tabelize.getEntityActions() %}

{% set id = 'pckg-maestro-table-' ~ table ~ '-panel' %}

<div class="pckg-maestro-tabelize" id="{{ id }}">

    {# Header template and entity actions #}
    {% include '_tabelize_header.twig' %}

    {# Vue.js template and script for record actions #}
    {% include '_pckg_maestro_actions.twig' %}

    {# Vue.js table template #}
    {% include '_tabelize_table_template.twig' %}

    <script type="text/javascript">
        var pckgMaestroTable{{ table }} = Vue.component('pckg-maestro-table-{{ table }}', pckgMaestroTableComponent.extend({
            name: 'pckg-maestro-table-{{ table }}',
            template: '#pckg-maestro-table-{{ table }}'
        }));

        utils.pushToVue({
            methods: {
                recordactionhandler: function (record, action) {
                    console.log('dispatching record:' + action);

                    this.$dispatch('record:' + action, record.id, record);
                    this.$emit('record:' + action, record.id, record);
                    this.$broadcast('record:' + action, record.id, record);
                },
                entityAction: function (action) {
                    console.log('broadcasting and dispatching entity:' + action, this.ids);
                    this.$broadcast('entity:' + action, this.ids, this.getSelectedRecords());
                    data.$root.$dispatch('entity:' + action, this.ids, this.getSelectedRecords());
                },
                getSelectedRecords: function () {
                    var selected = [];

                    $.each(this.records, function (i, record) {
                        if (this.ids.indexOf(record.id) >= 0) {
                            selected.push(record);
                        }
                    }.bind(this));

                    return selected;
                }
            },
            watch: {
                search: function (newValue) {
                    if (this.$refs.maestroTable._searchTimeout) {
                        this.$refs.maestroTable._searchTimeout.abort();
                    }

                    this.$refs.maestroTable._searchTimeout = http.getJSON('{{ searchUrl }}?search=' + newValue, function (data) {
                        this.records = data.records;
                        this.paginator.total = data.paginator.total;
                        this.paginator.url = data.paginator.url;
                    }.bind(this));
                }
            },
            data: {
                search: null,
                records: {{ tabelize.transformRecords() | json_encode | raw }},
                groups: {{ tabelize.getGroups() | json_encode | raw }},
                paginator: {
                    perPage: {{ tabelize.getPerPage() }},
                    page: {{ tabelize.getPage() }},
                    total: {{ tabelize.getTotal() }},
                    url: '{{ _router.getUri() }}'
                },
                ids: []
            }
        });
    </script>

    <!-- pckg-maestro-table -->
    <pckg-maestro-table-{{ table }} v-ref:maestro-table
                                    :records.sync="records"
                                    :fields="{{ tabelize.getFields() | json_encode | raw | escape('html_attr') }}"
                                    :depth="{{ tabelize.getGroups() | length }}"
                                    :groups="groups"
                                    :first="1"
                                    :ids.sync="ids"
                                    :search="search"
                                    :entityactions="{{ tabelize.getEntityActions() | json_encode | raw | escape('html_attr') }}"
                                    :paginator.sync="paginator"
                                    :table="{{ tabelize.getTable() | json_encode | raw | escape('html_attr') }}"
                                    :recordactionhandler="recordactionhandler">
    </pckg-maestro-table-{{ table }}>

</div>