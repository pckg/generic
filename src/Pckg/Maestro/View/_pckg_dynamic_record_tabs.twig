<script type="text/x-template" id="pckg-dynamic-record-tabs">
    <div class="pckg-dynamic-record-tabs">
        <div class="display-block">
            <h2 class="h-page-title">
                {{ formalize.getTitle() | raw }}

                <pckg-maestro-actions :record="record"
                                                  :actions="actions"
                                                  :identifier="'{{ table }}'"></pckg-maestro-actions>
            </h2>

            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#home" aria-controls="home" role="tab" data-toggle="tab">General</a>
                </li>
                {% for tab in tabs %}
                    <li role="presentation">
                        <a href="#dynamic-tab-{{ tab.id }}" aria-controls="dynamic-tab-{{ tab.id }}" role="tab"
                           data-toggle="tab"
                           @click.prevent="selectTab({{ tab.id }})">{{ tab.name }}</a>
                    </li>
                {% endfor %}
            </ul>
        </div>

        <div class="clearfix"></div>

        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="home">
                {{ formalize | raw }}

                <!-- tabelizes -->
                {% for t in tabelizes.0 %}
                    {{ t | raw }}
                {% endfor %}

                <!-- functionizes -->
                {% for f in functionizes.0 %}
                    {{ f | raw }}
                {% endfor %}
            </div>
            {% for tab in tabs %}
                <div role="tabpanel" class="tab-pane" id="dynamic-tab-{{ tab.id }}">
                    <i class="fal fa-spinner-third fa-spin fa-fw text-center"></i>
                    <keep-alive>
                        <template v-if="selectedTab == {{ tab.id }}">
                            <dynamic-tab-{{ tab.id }}></dynamic-tab-{{ tab.id }}>
                        </template>
                    </keep-alive>
                </div>
            {% endfor %}
        </div>

        <!-- additional components -->
        <component :is="component" v-for="component in uniqueActions" :key="component" @tab:refresh="selectTab"></component>
    </div>
</script>

<script type="text/javascript">
    Vue.component('pckg-dynamic-record-tabs', {
        mixins: [pckgDelimiters],
        template: '#pckg-dynamic-record-tabs',
        name: 'pckg-dynamic-record-tabs',
        data: function () {
            return {
                selectedTab: null,
                actions: {{ tabelize.getActionsArray() | json_encode | raw }},
                record: {{ tabelize.transformRecord(record) | json_encode | raw }},
                localBus: new Vue()
            };
        },
        methods: {
            selectTab: function (tabId) {
                this.selectedTab = tabId;
                /**
                 * Destroy and re-init component?
                 */
                $dispatcher.$emit('dynamic-tab-' + tabId + ':refresh', {
                    tabId: tabId, callback: function (data) {
                        if (data.functionizes) {
                            $(this.$el).find('.tab-functionize').html(data.functionizes.join(''));
                        }
                    }.bind(this)
                });
            }
        },
        computed: {
            uniqueActions: function () {
                let components = {};
                $.each(this.actions.entity, function (i, action) {
                    if (!action.component) {
                        return;
                    }
                    components[action.component] = action.component;
                });
                $.each(this.actions.record, function (i, action) {
                    if (!action.component) {
                        return;
                    }
                    components[action.component] = action.component;
                });
                return components;
            }
        }
    });

    {% for tab in tabs %}
    Vue.component('dynamic-tab-{{ tab.id }}', function (resolve) {
        http.getJSON('{{ tabelize.getTabUrl(tab) }}?html=1', function (data) {
            $('body').append(data.vue);

            resolve({
                template: '<div>' + data.html + '</div>',
                mixins: [pckgDelimiters],
                mounted: function () {
                    $(this.$el).closest('.tab-pane').find('> .fal').detach();
                }
            });
        });
    });
    {% endfor %}
</script>