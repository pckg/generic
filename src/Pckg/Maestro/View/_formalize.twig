<script type="text/x-template" id="pckg-maestro-formalize">
    <div class="pckg-maestro-formalize">
        {{ form | raw }}
    </div>
</script>

<script type="text/javascript">
    Vue.component('pckg-maestro-formalize', {
        name: 'pckg-maestro-formalize',
        template: '#pckg-maestro-formalize',
        mixins: [pckgDelimiters],
        data: function () {
            return {
                form: {{ form.getData() | json_encode | raw }},
                buttons: ['submit', 'as_new'],
                submitting: false
            };
        },
        watch: {
            submitting: function (val) {
                if (val) {
                    $(this.$el).find('input[type="submit"]').attr('disabled', 'disabled');
                } else {
                    $(this.$el).find('input[type="submit"]').attr('disabled', null);
                }
            }
        },
        methods: {
            toggleEditor: function (name) {
                var textarea = $('textarea[name="' + name + '"]');
                textarea.idify();
                var id = textarea.attr('id');

                if (pckgEditors[id]) {
                    destroyTinymce(id);
                } else {
                    initTinymce(id, {
                        setup: function (editor) {
                            editor.on('Change', function (e) {
                                this.form[name] = editor.getContent();
                            }.bind(this)).on('KeyDown', function (e) {
                                this.form[name] = editor.getContent();
                            }.bind(this));
                        }.bind(this)
                    });
                }
            },
            prepareData: function (type) {
                var data = http.formToData(this);
                $.each(this.buttons, function (i, v) {
                    delete data[v];
                });
                data[type] = true;

                return data;
            },
            submitForm: function () {
                this.submitting = true;
                var data = this.prepareData('submit');
                http.post('{{ form.getAction() }}', data, function (data) {
                    this.submitting = false;
                    if (data.success) {
                        $dispatcher.$emit('notification:success', data.message);
                    } else {
                        $dispatcher.$emit('notification:error', data.message || 'Something went wrong');
                    }

                    if (data.redirect) {
                        http.redirect(data.redirect);
                    }
                }.bind(this));
            }
        },
        mounted: function () {
            var $this = this;
            $(this.$el).find('input.datetime.vue-takeover').each(function () {
                $(this).datetimepicker({
                    format: 'YYYY-MM-DD HH:mm'
                }).on('dp.change', function () {
                    $this.form[$(this).attr('name')] = $(this).val();
                });
            });
        }
    });
</script>