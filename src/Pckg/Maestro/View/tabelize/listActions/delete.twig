{% macro relationTree(relations) %}
    {% if relations.count() %}
        <ul>
            {% for relation in relations %}
                <li>
                    {{ relation.title }}
                    {% if relation.hasManyRelations.count() %}{{ _self.relationTree(relation.hasManyRelations) }}{% endif %}
                </li>
            {% endfor %}
        </ul>
    {% endif %}
{% endmacro %}

{% import _self as macros %}

<script type="text/x-template" id="pckg-dynamic-delete">
    {% embed 'Pckg/Generic/View/modal.twig' with {'close': true, 'id': 'deleteRecordModal', 'class': 'danger'} %}
        {% block header %}
            Delete record
        {% endblock %}
        {% block body %}
            <p>Do you really want to delete #${ recordIds }?</p>
            {% if relations.count() %}
                <p>
                    Please note that this action will also delete: {{ macros.relationTree(relations) }}
                </p>
            {% endif %}
            <p><a @click.prevent="deleteRecord" href="#" class="btn btn-danger">Yes, delete record</a></p>
        {% endblock %}
    {% endembed %}

    {% embed 'Pckg/Generic/View/modal.twig' with {'close': true, 'id': 'recordDeletedModal'} %}
        {% block header %}
            Record deleted
        {% endblock %}
        {% block body %}
            <p>#${ recordIds } was deleted.</p>
        {% endblock %}
    {% endembed %}
</script>

<script>
    var pckgDynamicDelete = Vue.component('pckg-dynamic-delete', {
        name: 'pckg-dynamic-delete',
        template: '#pckg-dynamic-delete',
        data: function () {
            return {
                records: [],
            };
        },
        methods: {
            checkDeleteRecords: function (records) {
                this.records = records;

                $('#deleteRecordModal').modal('show');
            },
            deleteRecord: function () {
                $('#deleteRecordModal').modal('hide');

                $.each(this.records, function (i, record) {
                    http.get(record.deleteUrl);
                });

                $('#recordDeletedModal').modal('show');
            }
        },
        computed: {
            recordIds: function () {
                return this.records.map(function (item) {
                    return item.id;
                }).join(', ');
            }
        },
        events: {
            'record:checkDeleteRecord': function (id, record) {
                this.checkDeleteRecords([record]);

                return true;
            },
            'entity:checkDeleteRecords': function (ids, records) {
                this.checkDeleteRecords(records);

                return true;
            }
        }
    });
</script>

<pckg-dynamic-delete></pckg-dynamic-delete>