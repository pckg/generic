{% macro relationTree(relations) %}
    {% if relations %}
        <ul>
            {% for relation in relations %}
                <li>
                    {{ relation.title }}
                    {% if relation.hasManyRelations.count() %}{{ _self.relationTree(relation.hasManyRelations) }}{% endif %}
                </li>
            {% endfor %}
        </ul>
    {% endif %}
{% endmacro %}

{% import _self as macros %}

<script type="text/x-template" id="pckg-dynamic-delete">
    <div>
        {% embed 'Pckg/Generic/View/modal.twig' with {'close': true, 'id': 'deleteRecordModal', 'class': 'danger'} %}
            {% block header %}
                Delete record
            {% endblock %}
            {% block body %}
                <p>Do you really want to delete #${ recordIds }?</p>
                {% if relations.count() %}
                    <p>Please note that this action will also delete:</p>
                    {{ macros.relationTree(relations) }}
                {% endif %}
                <p><a @click.prevent="deleteRecord" href="#" class="btn btn-danger">Yes, delete record</a></p>
            {% endblock %}
        {% endembed %}

        {% embed 'Pckg/Generic/View/modal.twig' with {'close': true, 'id': 'recordDeletedModal'} %}
            {% block header %}
                Record deleted
            {% endblock %}
            {% block body %}
                <p>#${ recordIds } was deleted.</p>
            {% endblock %}
        {% endembed %}

        {% embed 'Pckg/Generic/View/modal.twig' with {'close': true, 'id': 'deleteRecordTranslationModal', 'class': 'danger'} %}
            {% block header %}
                Delete translation
            {% endblock %}
            {% block body %}
                <p>Do you really want to delete translation for record #${ recordIds }?</p>
                <p><a @click.prevent="deleteRecordTranslation" href="#" class="btn btn-danger">Yes, delete
                        translation</a></p>
            {% endblock %}
        {% endembed %}

        {% embed 'Pckg/Generic/View/modal.twig' with {'close': true, 'id': 'recordTranslationDeletedModal'} %}
            {% block header %}
                Record translation deleted
            {% endblock %}
            {% block body %}
                <p>Translation for record #${ recordIds } was deleted.</p>
            {% endblock %}
        {% endembed %}
    </div>
</script>

<script>
    var pckgDynamicDelete = Vue.component('pckg-dynamic-delete', {
        mixins: [pckgDelimiters],
        name: 'pckg-dynamic-delete',
        template: '#pckg-dynamic-delete',
        data: function () {
            return {
                records: [],
                identifier: null
            };
        },
        methods: {
            checkDeleteRecords: function (records, recordIds, identifier) {
                this.identifier = identifier;
                this.records = utils.collect(records);

                $('#deleteRecordModal').modal('show');
            },
            checkDeleteRecordTranslation: function (records) {
                this.records = utils.collect(records);

                $('#deleteRecordTranslationModal').modal('show');
            },
            deleteRecord: function () {
                console.log("will emit", this.identifier);
                $('#deleteRecordModal').modal('hide');

                var deleteTimeout = null;
                $.each(this.records, function (i, record) {
                    http.get(record.deleteUrl, function () {
                        clearTimeout(deleteTimeout);
                        deleteTimeout = setTimeout(function () {
                            console.log('emiting', 'pckg-maestro-table-' + this.identifier + ':refresh', 'dynamic-tab-' + this.identifier + ':refresh');
                            $dispatcher.$emit('pckg-maestro-table-' + this.identifier + ':refresh');
                            $dispatcher.$emit('dynamic-tab-' + this.identifier + ':refresh');
                        }.bind(this), 333);
                    }.bind(this));
                }.bind(this));

                $('#recordDeletedModal').modal('show');
            },
            deleteRecordTranslation: function () {
                $('#deleteRecordTranslationModal').modal('hide');

                $.each(this.records, function (i, record) {
                    http.get(record.deleteTranslationUrl);
                });

                $('#recordTranslationDeletedModal').modal('show');
            }
        },
        computed: {
            recordIds: function () {
                return this.records.map(function (item) {
                    return item.id;
                }).join(', ');
            }
        },
        created: function () {
            $dispatcher.$on('record:checkDeleteRecord', this.checkDeleteRecords);
            $dispatcher.$on('record:checkDeleteRecordTranslation', this.checkDeleteRecordTranslation);
            $dispatcher.$on('entity:checkDeleteRecords', this.checkDeleteRecords);
        },
        beforeDestroy: function () {
            $dispatcher.$off('record:checkDeleteRecord', this.checkDeleteRecords);
            $dispatcher.$off('record:checkDeleteRecordTranslation', this.checkDeleteRecordTranslation);
            $dispatcher.$off('entity:checkDeleteRecords', this.checkDeleteRecords);
        }
    });
</script>

<pckg-dynamic-delete></pckg-dynamic-delete>